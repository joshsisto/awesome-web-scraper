version: '3.8'

services:
  # MongoDB for flexible data storage
  mongodb:
    image: mongo:7.0
    container_name: scraper_mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: scraper
      MONGO_INITDB_ROOT_PASSWORD: scraper_pass
    volumes:
      - mongodb_data:/data/db
    networks:
      - scraper_network

  # Redis for caching and session management
  redis:
    image: redis:7.2-alpine
    container_name: scraper_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - scraper_network

  # Orchestration Service
  orchestration:
    build:
      context: .
      dockerfile: services/orchestration/Dockerfile
    container_name: scraper_orchestration
    depends_on:
      - mongodb
      - redis
    environment:
      - MONGODB_URL=mongodb://scraper:scraper_pass@mongodb:27017
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./config:/app/config
    networks:
      - scraper_network

  # Extraction Service
  extraction:
    build:
      context: .
      dockerfile: services/extraction/Dockerfile
    container_name: scraper_extraction
    depends_on:
      - mongodb
      - redis
      - orchestration
    environment:
      - MONGODB_URL=mongodb://scraper:scraper_pass@mongodb:27017
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./config:/app/config
    networks:
      - scraper_network

  # Processing Service
  processing:
    build:
      context: .
      dockerfile: services/processing/Dockerfile
    container_name: scraper_processing
    depends_on:
      - mongodb
      - redis
    environment:
      - MONGODB_URL=mongodb://scraper:scraper_pass@mongodb:27017
      - REDIS_URL=redis://redis:6379
    networks:
      - scraper_network

  # Storage Service
  storage:
    build:
      context: .
      dockerfile: services/storage/Dockerfile
    container_name: scraper_storage
    depends_on:
      - mongodb
      - redis
    environment:
      - MONGODB_URL=mongodb://scraper:scraper_pass@mongodb:27017
      - REDIS_URL=redis://redis:6379
    networks:
      - scraper_network

  # Proxy Management Service
  proxy_management:
    build:
      context: .
      dockerfile: services/proxy_management/Dockerfile
    container_name: scraper_proxy_management
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./config:/app/config
    networks:
      - scraper_network
    privileged: true  # Required for VPN operations

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: scraper_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - scraper_network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: scraper_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - scraper_network

volumes:
  mongodb_data:
  redis_data:
  grafana_data:

networks:
  scraper_network:
    driver: bridge